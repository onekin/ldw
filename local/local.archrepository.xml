<?xml version="1.0" encoding="UTF-8"?>
      <table  xmlns:bio="http://purl.org/vocab/bio/0.1/"
  xmlns:schema="http://schema.org/"
  xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author><!-- your name or company name --></author>
        <description><!-- description of the table --></description>
        <documentationURL><!-- url for API documentation --></documentationURL>
        <apiKeyURL><!-- url for getting an API key if needed --></apiKeyURL>
        <!--lowering-->
		<sampleQuery> URIPattern: http://rdf.onekin.org/local/archrepository/{bio:agent}/{schema:about}</sampleQuery>
		<sampleQuery> URIExample: http://rdf.onekin.org/local/archrepository/94085/pizza</sampleQuery>
    </meta>
    <bindings>
        <select itemPath="results.*" produces="XML">
            <inputs>

		<key id="zip" as="bio:agent" type="xs:string" paramType="query" required="true"/>
		<key id="query" as="schema:about" type="xs:string" paramType="query" required="true"/>
             </inputs>
             <execute>
                <![CDATA[
 var loweringselect = "env 'store://datatables.org/alltableswithkeys'; select * from local.search(1) where zip=@zip and query=@query";
 var loweringparams ={};
 loweringparams ['zip']= inputs['bio:agent'];
 loweringparams ['query']= inputs['schema:about'];

 var loweringquery = y.query (loweringselect,loweringparams); 
 response.object =  loweringquery.results;
 ]]>
            </execute>
      </select>
 <function name="lifting">
  <inputs>
     <pipe id="oneXML" paramType="variable"/>
     <key id="URI" paramType="variable" required="true"/>
  </inputs>
 <execute><![CDATA[

try{
 var oneJSON= y.xmlToJson(oneXML);
	var oneJSONLD={};
	oneJSONLD['@id']=URI;
	oneJSONLD['@context']= {"bibo":"http://purl.org/ontology/bibo/","doap":"http://usefulinc.com/ns/doap#"};
	oneJSONLD['@type']= 'doap:ArchRepository';
    
  oneJSONLD['bibo:abstract'] = getValue("oneJSON['Result']['id']");
     }catch (err){ y.log(err);}
    response.object = oneJSONLD;

function getInterlink (urlpattern, value){
	try{return value? urlpattern.replace(/{.*}/, value) : null;}catch(err){return null;}}

function getRegexpValue(regexp, value){
 	try{return value.match(regexp)[0];}catch(err){return null;}}

function getValue(dataPath) {
	try{return eval(dataPath) || null; }catch(err){return null;}}

function getLength(obj) {
  	try{return obj? obj.length: 0; }catch(err){return 0;}}

]]>
   </execute>
</function>
    </bindings> 
 </table>