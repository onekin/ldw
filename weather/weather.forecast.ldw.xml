<?xml version="1.0" encoding="UTF-8"?>      <table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">    <meta>        <author><!-- your name or company name --></author>        <description><!-- description of the table --></description>        <documentationURL><!-- url for API documentation --></documentationURL>        <apiKeyURL><!-- url for getting an API key if needed --></apiKeyURL>        <!--lowering-->		<sampleQuery> URIPattern: http://rdf.onekin.org/weather.forecast.ldw/{woeid}</sampleQuery>		<sampleQuery> URIExample: http://rdf.onekin.org/weather.forecast.ldw/2502265</sampleQuery>    </meta>    <bindings>        <select itemPath="results.*" produces="XML">            <inputs>		<key id="woeid" type="xs:string" paramType="variable" required="true"/>             </inputs>             <execute>                <![CDATA[ var loweringselect = "env 'store://datatables.org/alltableswithkeys'; select * from weather.forecast where woeid=2502265"; var loweringparams ={}; loweringparams ['woeid']= woeid; var loweringquery = y.query (loweringselect,loweringparams);  response.object =  loweringquery.results; ]]>            </execute>      </select> <function name="lifting">  <inputs>     <pipe id="oneXML" paramType="variable"/>     <key id="URI" paramType="variable" required="true"/>  </inputs> <execute><![CDATA[try{ var oneJSON= y.xmlToJson(oneXML);	var oneJSONLD={};	oneJSONLD['@id']=URI;	oneJSONLD['@context']= {"geo":"http://www.w3.org/2003/01/geo/wgs84_pos","km4c":"http://www.disit.org/km4city/schema"};	oneJSONLD['@type']= 'km4c:WeatherPrediction';      oneJSONLD['km4c:hour'] = getRegexpValue("oneJSON['channel']['lastBuildDate']", /......m/);  oneJSONLD['geo:location'] = getInterlink("oneJSON['channel']['location']['city']", 'http://dbpedia.org/resource/{$VALUE}');  oneJSONLD['km4c:wind'] = getValue("oneJSON['channel']['wind']['speed']");  oneJSONLD['km4c:humidity'] = getValue("oneJSON['channel']['atmosphere']['humidity']");  oneJSONLD['km4c:day'] = getRegexpValue("oneJSON['channel']['item']['pubDate']", /.......201./);     }catch (err){ y.log(err);}    response.object = oneJSONLD;//interlink with regexpfunction getRegexpInterlink (dataPath, urlpattern, regexp){	return urlpattern.replace(/{.*}/, getRegexpValue(dataPath, regexp));}//interlink without regexpfunction getInterlink (dataPath, urlpattern){	return urlpattern.replace(/{.*}/, getValue(dataPath));}//direct mapping with regexpfunction getRegexpValue(dataPath, regexp){ 	try{return getValue(dataPath).match(regexp)[0];}catch(err){return null;}}//direct mapping without regexpfunction getValue(dataPath) {	try{return eval(dataPath) || null; }catch(err){return null;}}//create array even the path is brokenfunction setArray(dataPath) {  var begin=dataPath.indexOf(']',0)+1;  beginnext = dataPath.indexOf(']',begin+1)  while (begin>0 && beginnext>0){    	var dPath = dataPath.substring(0,begin);	var objs= getValue(dPath);  			if (objs=== null) {eval(dPath+'={};');}	begin = dataPath.indexOf(']',begin+1)+1;   	beginnext = dataPath.indexOf(']',begin+1)  }  var res = [];  var objs= getValue(dataPath);  if (objs=== null) {eval(dataPath+'=[];');}  else {if (!objs[0]) {eval(dataPath+'=[];'+dataPath+'.push(objs);');}}}  ]]>   </execute></function>    </bindings>  </table>